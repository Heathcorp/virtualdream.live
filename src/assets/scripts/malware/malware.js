// hi, in case you're worried, please don't be
// despite being named "malware", its all for theatre 
// this is purely cosmetic and confined to virtualdream.live 
// repairing fourth wall now bye

// INFECTION ORGANISATION

// load current infections from local storage
// return infection list
function loadInfectionStorage() {
    let infections = []
    if(localStorage.getItem('infections') != null) {
        infections = JSON.parse(localStorage.getItem('infections'));
    } 
    console.log("loadInfectionStorage: loaded " + infections);
    return infections;
}

// save current infections to local storage
function saveInfectionStorage(infections) {
    localStorage.setItem("infections", JSON.stringify(infections));
    console.log("saveInfectionStorage: saved " + localStorage.getItem("infections"))
}

// load stickers from local storage
function runInfections() {
    let infections = loadInfectionStorage();
    // list current infections
    for(let i = 0; infections[i]; i++) {
        let infection = infections[i];
        switch(infection) {
            case "malPalPyramid":
                infectionMalPalPyramid();
                break;
            case "mallware":
                infectionMallware();
                break;
        }
    }
}

// add new infection
// call save to local storage
function addInfection(infectionName) {
    let infections = loadInfectionStorage();
    console.log("addInfection: loaded " + infections);
    infections.push(infectionName);
    saveInfectionStorage(infections);
}

// load infections on start
window.load = runInfections();

// INFECTION FUNCTIONALITY
// Mal Pal - Pyramid
function infectionMalPalPyramid() {
    let autoTimeOut = false;
    let autoReplace = true;

    // create pyramid mascot image 
    let img = new Image();
    img.src = "../../src/assets/img/mascots/mascot-pyramid.gif";
    let imgElement = document.body.appendChild(img);
    imgElement.style.position = "fixed";
    imgElement.style.left = "25px";
    imgElement.style.bottom = "25px";

    // create bubble on run
    let newBubble = createBubble(getRandomBubblePhrase(), autoTimeOut);
    // bubbleTimeOut(newBubble);

    // setup listener for creating random bubbles
    document.addEventListener("keydown", function(e) {
        if(e.key == "z") createBubble(getRandomBubblePhrase(), autoTimeOut);
    } );

    // delete bubble element 
    function deleteBubble(bubble, autoReplace=false) {
        // fade out before delete
        var fadeEffect = setInterval(function () {
            if (!bubble.style.opacity) {
                bubble.style.opacity = 1;
            }
            if (bubble.style.opacity > 0) {
                bubble.style.opacity -= 0.1;
            } else {
                // once opacity 0, delete element
                clearInterval(fadeEffect);
                bubble.remove();
                if(autoReplace) {
                    let autoReplaceTimeMin = 1000
                    let autoReplaceTimeMax = 5000
                    let autoReplaceTime = Math.floor(Math.random() * (autoReplaceTimeMax - autoReplaceTimeMin + 1) + autoReplaceTimeMin)
                    // set timer for new bubble creation
                    setTimeout(function() { 
                        createBubble(getRandomBubblePhrase(), autoTimeOut) 
                    }, autoReplaceTime);
                }
                
            }
        }, 100);
    }

    // create bubble with given text
    // returns element
    function createBubble(bubbleText, autoTimeOut=false) {
        // create bubble
        let bubbleDiv = document.createElement("div");
        let bubbleDivElement = document.body.appendChild(bubbleDiv);
        bubbleDivElement.className = "bubble";
        bubbleDivElement.style.left = "225px";
        bubbleDivElement.style.bottom = "200px";

        // create bubble close button
        let bubbleClose = document.createElement("p");
        let bubbleCloseTextNode = document.createTextNode("X");
        bubbleClose.appendChild(bubbleCloseTextNode);
        let bubbleCloseElement = bubbleDivElement.appendChild(bubbleClose);
        bubbleCloseElement.onclick = function() {deleteBubble(this.parentElement, autoReplace)};
        bubbleCloseElement.className = "bubbleClose";

        // create bubble text
        let bubblePara = document.createElement("p");
        let bubbleTextNode = document.createTextNode(bubbleText);
        bubblePara.appendChild(bubbleTextNode);
        bubbleDivElement.appendChild(bubblePara);

        // set bubble automatic timeout if requested
        if(autoTimeOut) {
            setTimeout(function() { 
                deleteBubble(bubbleDivElement, autoReplace) 
            }, 100);
        }

        return bubbleDivElement;
    }

    // pulls a random phrase from phrase array
    // returns string
    function getRandomBubblePhrase() {
        let bubblePhrases = [
            "hello world!",
            "aaa aa a aa a a aaaa aaaaaa aa a aaaa aa a aa a a aaaa aaaaaa aa a a aaa aa a aa a a aaaa aaaaaa aa a a aaa aa a aa a a aaaa aaaaaa aa a a",
            "wowowowowowow",
            "oh i love " + document.title + "!"
        ]
        let bubblePhrase = bubblePhrases[Math.floor(Math.random() * bubblePhrases.length)];
        return bubblePhrase;
    }
}

function infectionMallware() {
    console.log("X X X YOU HAVE BEEN INFECTED BY MALL WARE X X X\nHAPPY SHOPPING!!!");
}